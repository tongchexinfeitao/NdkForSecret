apply plugin: 'com.android.library'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}


//该任务只是负责清理，  在tasks/others/clearJar 下执行
task clearJar(type: Delete) {
    delete 'build/outputs/'
}

//该任务只是负责复制，  在tasks/others/makeJar 下执行
//复制之前首先得生成对应的jar和aar，使用task/build/assemble 可以同时生成aar和jar的release和debug版本
task makeJar(type: Copy) {
    from('build/intermediates/packaged-classes/release/')
    into('build/outputs/')
    include('classes.jar')
    rename('classes.jar', 'utils_' + android.defaultConfig.versionName + '.jar');
}


